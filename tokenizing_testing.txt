// V1
*** Start of Tokenizing Words Demo ***
Type a few words separated by space (q - to quit) :
a
Word #1 is 'a'
Type a few words separated by space (q - to quit) :
The Admin FCM APIs allow you to multicast a message to a list of device registration tokens. You can specify up to 500 device registration tokens per invocation.
Word #1 is 'The'
Word #2 is 'Admin'
Word #3 is 'FCM'
Word #4 is 'APIs'
Word #5 is 'allow'
Word #6 is 'you'
Word #7 is 'to'
Word #8 is 'multicast'
Word #9 is 'a'
Word #10 is 'message'
Word #11 is 'to'
Word #12 is 'a'
Word #13 is 'list'
Word #14 is 'of'
Word #15 is 'device'
Word #16 is 'registration'
Word #17 is 'tokens.'
Word #18 is 'You'
Word #19 is 'can'
Word #20 is 'specify'
Word #21 is 'up'
Word #22 is 'to'
Word #23 is '500'
Word #24 is 'device'
Word #25 is 'registration'
Word #26 is 'tokens'
Word #27 is 'per'
Word #28 is 'invocation.'
Type a few words separated by space (q - to quit) :
After you have created a topic, either by subscribing client app instances to the topic on the client side or via the server API, you can send messages to the topic. If this is your first time building send requests for FCM, see the guide to your server environment and FCM for important background
Word #1 is 'After'
Word #2 is 'you'
Word #3 is 'have'
Word #4 is 'created'
Word #5 is 'a'
Word #6 is 'topic,'
Word #7 is 'either'
Word #8 is 'by'
Word #9 is 'subscribing'
Word #10 is 'client'
Word #11 is 'app'
Word #12 is 'instances'
Word #13 is 'to'
Word #14 is 'the'
Word #15 is 'topic'
Word #16 is 'on'
Word #17 is 'the'
Word #18 is 'client'
Word #19 is 'side'
Word #20 is 'or'
Word #21 is 'via'
Word #22 is 'the'
Word #23 is 'server'
Word #24 is 'API,'
Word #25 is 'you'
Word #26 is 'can'
Word #27 is 'send'
Word #28 is 'messages'
Word #29 is 'to'
Word #30 is 'the'
Word #31 is 'topic.'
Word #32 is 'If'
Word #33 is 'this'
Word #34 is 'is'
Word #35 is 'your'
Word #36 is 'first'
Word #37 is 'time'
Word #38 is 'building'
Word #39 is 'send'
Word #40 is 'requests'
Word #41 is 'for'
Word #42 is 'FCM,'
Word #43 is 'see'
Word #44 is 'the'
Word #45 is 'guide'
Word #46 is 'to'
Word #47 is 'your'
Word #48 is 'server'
Word #49 is 'environment'
Word #50 is 'and'
Word #51 is 'FCM'
Word #52 is 'for'
Word #53 is 'important'
Word #54 is 'background'
Type a few words separated by space (q - to quit) :
Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus esse consectetur aliquam alias unde architecto natus, omnis quibusdam nisi reiciendis sit molestiae rerum libero repudiandae veritatis quis ea suscipit. Ullam, culpa odio maxime ipsam vel quibusdam veritatis harum. Minus similique dolorum
Word #1 is 'Lorem'
Word #2 is 'ipsum'
Word #3 is 'dolor'
Word #4 is 'sit'
Word #5 is 'amet'
Word #6 is 'consectetur'
Word #7 is 'adipisicing'
Word #8 is 'elit.'
Word #9 is 'Delectus'
Word #10 is 'esse'
Word #11 is 'consectetur'
Word #12 is 'aliquam'
Word #13 is 'alias'
Word #14 is 'unde'
Word #15 is 'architecto'
Word #16 is 'natus,'
Word #17 is 'omnis'
Word #18 is 'quibusdam'
Word #19 is 'nisi'
Word #20 is 'reiciendis'
Word #21 is 'sit'
Word #22 is 'molestiae'
Word #23 is 'rerum'
Word #24 is 'libero'
Word #25 is 'repudiandae'
Word #26 is 'veritatis'
Word #27 is 'quis'
Word #28 is 'ea'
Word #29 is 'suscipit.'
Word #30 is 'Ullam,'
Word #31 is 'culpa'
Word #32 is 'odio'
Word #33 is 'maxime'
Word #34 is 'ipsam'
Word #35 is 'vel'
Word #36 is 'quibusdam'
Word #37 is 'veritatis'
Word #38 is 'harum.'
Word #39 is 'Minus'
Word #40 is 'similique'
Word #41 is 'd'
Type a few words separated by space (q - to quit) :
Word #1 is 'lorum'
Type a few words separated by space (q - to quit) :
q
*** End of Tokenizing words Demo ***

// V2
*** Start of Tokenizing Phrases Demo ***
Type a few phrases separated by comma(q - to quit) :
a
Phrase #1 is 'a'
Type a few phrases separated by comma(q - to quit) :
After submitting, if you see nothing where you expect the submission to be rendered/referenced, click Continue. You may have to repeat the upload. (Who knows why? It's Bb.) In any case, do check for the confirmation message and email.
Phrase #1 is 'After submitting'
Phrase #2 is ' if you see nothing where you expect the submission to be rendered/referenced'
Phrase #3 is ' click Continue. You may have to repeat the upload. (Who knows why? It's Bb.) In any case'
Phrase #4 is ' do check for the confirmation message and email.'
Type a few phrases separated by comma(q - to quit) :
After you have created a topic, either by subscribing client app instances to the topic on the client side or via the server API, you can send messages to the topic. If this is your first time building send requests for FCM, see the guide to your server environment and FCM for important background
Phrase #1 is 'After you have created a topic'
Phrase #2 is ' either by subscribing client app instances to the topic on the client side or via the server API'
Phrase #3 is ' you can send messages to the topic. If this is your first time building send requests for FCM'
Phrase #4 is ' see the guide to your server environment and FCM for important background'
Type a few phrases separated by comma(q - to quit) :
Forming a team is establishing communication between the individual members, collaborating, and the sharing of tasks. Storming happens when people disagree, do not participate, or honour their committments. Norming is sorting out the storming. Performing is getting the work done as a team according to accepted norms.
Phrase #1 is 'Forming a team is establishing communication between the individual members'
Phrase #2 is ' collaborating'
Phrase #3 is ' and the sharing of tasks. Storming happens when people disagree'
Phrase #4 is ' do not participate'
Phrase #5 is ' or honour their committments. Norming is sorting out the storming. Performing is getting the work done as a team accordin'
Type a few phrases separated by comma(q - to quit) :
Phrase #1 is ' to accepted norms.'
Type a few phrases separated by comma(q - to quit) :
q
*** End of Tokenizing Phrases Demo ***

// V3
*** Start of Tokenizing Sentences Demo ***
Type a few sentences separated by dot(q - to quit):
a
Senetnce #1 is 'a'
Type a few sentences separated by dot(q - to quit):
Amazon Web Services (AWS) is the world's most comprehensive and broadly adopted cloud that includes infrastructure as a service (IaaS) and platform as a service (PaaS) offerings. AWS services offer scalable solutions for compute, storage, databases, analytics, and more.
Senetnce #1 is 'Amazon Web Services (AWS) is the world's most comprehensive and broadly adopted cloud that includes infrastructure as a service (IaaS) and platform as a service (PaaS) offerings'
Senetnce #2 is ' AWS services offer scalable solutions for compute, storage, databases, analytics, and more'
Type a few sentences separated by dot(q - to quit):
Amazon Q Developer is a generative artificial intelligence (AI) powered coding assistant that can provide inline code completions, generate net new code, scan your code for security vulnerabilities, and make code upgrades and improvements, such as language updates, debugging, and optimizations.
Senetnce #1 is 'Amazon Q Developer is a generative artificial intelligence (AI) powered coding assistant that can provide inline code completions, generate net new code, scan your code for security vulnerabilities, and make code upgrades and improvements, such as language updates, debugging, and optimizations'
Type a few sentences separated by dot(q - to quit):
Adjusting to a cloud-native approach can take time, especially if you are accustomed to the traditional on-premises way of provisioning hardware and building applications. Gaining familiarity with core concepts of cloud computing and the AWS Cloud will help give you confidence as you begin your cloud journey.
Senetnce #1 is 'Adjusting to a cloud-native approach can take time, especially if you are accustomed to the traditional on-premises way of provisioning hardware and building applications'
Senetnce #2 is ' Gaining familiarity with core concepts of cloud computing and the AWS Cloud will help give you confidence as you begin your cl'
Type a few sentences separated by dot(q - to quit):
Senetnce #1 is 'ud journey'
Type a few sentences separated by dot(q - to quit):
q
*** End of Tokenizing Sentences Demo ***
